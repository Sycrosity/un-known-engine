name: Build and upload binaries to release

on:
  repository_dispatch:
    types: [tag-created]

jobs:

  linux-x86_64:
    name: Build and Release linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project
        run: cargo build --release --locked #--target x86_64-unknown-linux-gnu
      - name: Optimize and package binary
        run: |
          cd target/release
          strip unknown-engine
          chmod +x unknown-engine
          tar -c unknown-engine | gzip > unknown-engine.tar.gz
      - name: Upload binary to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/release/unknown-engine.tar.gz
          asset_name: unknown-engine-${{ github.event.client_payload.new_version }}-linux-x86_64.tar.gz
          tag: ${{ github.event.client_payload.new_version }}

  # linux-musl-x86_64:
  #   name: Build and Release linux musl
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
  #     - name: Install stable linux musl
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable-x86_64-linux-musl --force-non-host
  #         override: true
  #         # target: "x86_64-linux-musl"
  #         default: true
  #     - name: Build project
  #       run: |
  #         cargo build --release --locked
  #       #--target x86_64-unknown-linux-gnu
  #     - name: Optimize and package binary
  #       run: |
  #         cd target/release
  #         strip unknown-engine
  #         chmod +x unknown-engine
  #         tar -c unknown-engine | gzip > unknown-engine.tar.gz
  #     - name: Upload binary to release
  #       uses: svenstaro/upload-release-action@v2
  #       with:
  #         repo_token: ${{ secrets.GITHUB_TOKEN }}
  #         file: target/release/x86_64-unknown-linux-musl/release/unknown-engine.tar.gz
  #         asset_name: unknown-engine-${{ github.event.client_payload.new_version }}-linux-musl-x86_64.tar.gz
  #         tag: ${{ github.event.client_payload.new_version }}

  macosx-x86_64:
    name: Build and Release macosx 
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build project
        run: |
          cp ./utils/cargo-bundle ~/.cargo/bin/cargo-bundle
          cargo bundle --release --locked
        # run: cargo build --release --locked #--target x86_64-apple-darwin
      - name: Optimize and package binary
        run: |
          cd target/release/bundle
          ln -s /Applications osx
          hdiutil create /tmp/tmp.dmg -ov -volname "UnknownEngineInstall" -fs HFS+ -srcfolder osx
          convert /tmp/tmp.dmg -format UDZO -o unknown-engine.dmg
      - name: Upload binary to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/release/bundle/unknown-engine.dmg
          asset_name: unknown-engine-${{ github.event.client_payload.new_version }}-macosx-x86_64.dmg
          tag: ${{ github.event.client_payload.new_version }}

  windows-x86_64:
    name: Build and Release windows
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build project
        run: cargo build --release --locked #--target x86_64-pc-windows-gnu
      - name: Optimize and package binary
        run: |
          cd target/release
          7z a unknown-engine.exe.zip unknown-engine.exe
      - name: Upload binary to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/release/unknown-engine.exe.zip
          asset_name: unknown-engine-${{ github.event.client_payload.new_version }}-windows-x86_64.exe.zip
          tag: ${{ github.event.client_payload.new_version }}
